---
/* eslint-disable @typescript-eslint/no-explicit-any */
import Layout from "../layouts/Layout.astro"
import Recommendation from "../components/Recommendation.astro"
import { Filters } from "../components/filters/Filters"
import StarHeader from "../components/filters/StarHeader.astro"
import StarOptions from "../components/filters/StarOptions.astro"

import { getCollection } from "astro:content"

let query = Astro.url.searchParams.get("stars")
let stars = query ? parseInt(query!) : null

let collection = await getCollection("recommendations")
let recs = collection
    .map(rec => ({
        ...rec.data,
        slug: rec.slug as string,
        description: rec.body,
    }))
    .filter(rec => (stars !== null ? rec.stars === stars : true))
    .sort((lhs, rhs) => (rhs.createdOn as any) - (lhs.createdOn as any))

Astro.response.headers.set(
    "Cache-Control",
    "public, max-age=30, s-maxage=86400, stale-while-revalidate=86400",
)
---

<Layout>
    <div class="noise-container p-6">
        <div class="noise"></div>
        <div class="noise-underlay"></div>
        <h1 class="text-5xl font-bold font-serif-display sm:text-6xl">Recommendations</h1>
        <div class="block lg:grid sm:grid-cols-[3fr_2fr]">
            <div class="flex flex-col items-start gap-7 py-10">
                {recs.map(rec => <Recommendation recommendation={rec} />)}
            </div>
            <Filters client:load>
                <StarHeader slot="starHeader" />
                <StarOptions slot="starOptions" />
            </Filters>
        </div>
    </div>
</Layout>
